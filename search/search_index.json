{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"QGIS GeoNode QGIS plugin \u00b6 A QGIS plugin for working with GeoNode resources Documentation: https://kartoza.github.io/qgis_geonode Source code: https://github.com/kartoza/qgis_geonode This is a QGIS plugin to allow working with and managing GeoNode resources in QGIS. Installation \u00b6 This plugin is available for installation via the main QGIS plugin repository. Inside QGIS, navigate to Plugins -> Manage and Install Plugins... , then search for QGIS GeoNode and install it Warning It may be necessary to restart QGIS after installing the plugin, since QGIS does not currently allow Python plugins to reload data providers dynamically Additionally, when activated, this plugin replaces the core GeoNode provider that comes preinstaled in QGIS. If you want to get the core provider back you will need to disable this plugin and restart QGIS. Note Be sure to have the Show also experimental plugins checkbox checked, the QGIS Plugin Manager Settings section. Extra - Installing from our custom plugin repo In addition to installing from the official QGIS plugin repository. This plugin is also available for install from our own custom plugin repo. This may ocasionally have a newer version than the one present in the official QGIS repo (the reason being that the QGIS repo is manually curated and it usually takes a while before a new version is approved by its maintainers) It is available at: https://kartoza.github.io/qgis_geonode/repo/plugins.xml Add this custom repository inside QGIS Plugin Manager Refresh the list of available plugins Search for a plugin named QGIS GeoNode Install it! Check the Development section for a more developer oriented installation procedure License \u00b6 This plugin is distributed under the terms of the GNU General Public License version 3","title":"Home"},{"location":"#qgis-geonode-qgis-plugin","text":"A QGIS plugin for working with GeoNode resources Documentation: https://kartoza.github.io/qgis_geonode Source code: https://github.com/kartoza/qgis_geonode This is a QGIS plugin to allow working with and managing GeoNode resources in QGIS.","title":"QGIS GeoNode QGIS plugin"},{"location":"#installation","text":"This plugin is available for installation via the main QGIS plugin repository. Inside QGIS, navigate to Plugins -> Manage and Install Plugins... , then search for QGIS GeoNode and install it Warning It may be necessary to restart QGIS after installing the plugin, since QGIS does not currently allow Python plugins to reload data providers dynamically Additionally, when activated, this plugin replaces the core GeoNode provider that comes preinstaled in QGIS. If you want to get the core provider back you will need to disable this plugin and restart QGIS. Note Be sure to have the Show also experimental plugins checkbox checked, the QGIS Plugin Manager Settings section. Extra - Installing from our custom plugin repo In addition to installing from the official QGIS plugin repository. This plugin is also available for install from our own custom plugin repo. This may ocasionally have a newer version than the one present in the official QGIS repo (the reason being that the QGIS repo is manually curated and it usually takes a while before a new version is approved by its maintainers) It is available at: https://kartoza.github.io/qgis_geonode/repo/plugins.xml Add this custom repository inside QGIS Plugin Manager Refresh the list of available plugins Search for a plugin named QGIS GeoNode Install it! Check the Development section for a more developer oriented installation procedure","title":"Installation"},{"location":"#license","text":"This plugin is distributed under the terms of the GNU General Public License version 3","title":"License"},{"location":"about/","text":"About \u00b6 This plugin is being created as an activity of the PRN project, commissioned by the The Pacific Community (SPC) and with funding from the World Bank . Its goal is to develop a QGIS-based client for GeoNode that allows GIS users to more easily integrate GeoNode into their workflows. Original design and implementation is being done as a joint effort between the Kartoza and GeoSolutions teams, with input from the broader community. The plugin is released as open source software and is available for usage by the QGIS community at large.","title":"About"},{"location":"about/#about","text":"This plugin is being created as an activity of the PRN project, commissioned by the The Pacific Community (SPC) and with funding from the World Bank . Its goal is to develop a QGIS-based client for GeoNode that allows GIS users to more easily integrate GeoNode into their workflows. Original design and implementation is being done as a joint effort between the Kartoza and GeoSolutions teams, with input from the broader community. The plugin is released as open source software and is available for usage by the QGIS community at large.","title":"About"},{"location":"changelog-base/","text":"Changelog \u00b6 All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . Unreleased \u00b6 1.0.0 - 2022-02-25 \u00b6 Changed \u00b6 Default WFS version for new connections is now 1.1.0, which is known to work OK when editing vector layers via WFS Fixed \u00b6 First usage crash due to there not being a current connection 1.0.0-rc1 - 2022-02-23 \u00b6 Changed \u00b6 Replace core QGIS GeoNode provider when activated Hide select UI controls when remote reports insufficient permissions Improve plugin description when viewed through QGIS plugin manager Fixed \u00b6 Improve focus behavior for searching datasets in QGIS data source dialog Improve handling of invalid connections 0.9.5 - 2022-02-09 \u00b6 Added \u00b6 Add new WFS version config option and default to WFS v1.1.0 Fixed \u00b6 Remove unsupported f-string formatting on Python3.7 Assign UNKNOWN as dataset type when the remote does not report it 0.9.4 - 2022-02-07 \u00b6 Added \u00b6 Add support for HTTP Basic Auth when connecting to GeoNode deployments featuring version 3.3.0 or later 0.9.3 - 2022-01-20 \u00b6 Fixed \u00b6 Improve compatibility with Python 3.7 when exporting SLD for raster layers Fix network access manager not using correct timeout for layer uploads 0.9.2 - 2022-01-18 \u00b6 Fixed \u00b6 Do not use QgsNetworkAccessManager features introduced after QGIS 3.18 0.9.1 - 2022-01-14 \u00b6 Fixed \u00b6 Fix layer properties dialogue not opening correctly for non-GeoNode layers Improve plugin metadata fields when displayed in QGIS plugin repo list Do not use typing.Final in order to support PYthon 3.7 0.9.0 - 2022-01-12 \u00b6 Added \u00b6 Add connection capabilities and detected version details Connection test now uses auth credentials, if available Changed \u00b6 Layer uploads also send SLD style Update user guide Fixed \u00b6 Fix re-download of metadata for loaded layers Fix dataset abstract not being shown on the UI anymore 0.5.0 - 2021-12-29 \u00b6 Added \u00b6 Allow uploading QGIS layers to GeoNode as new datasets Fixed \u00b6 QGIS plugins menu no longer shows empy reference to this plugin 0.4.0 - 2021-12-20 \u00b6 Added \u00b6 Allow loading and saving layer title and abstract from/to GeoNode Changed \u00b6 Bump minimum QGIS version to 3.18 0.3.4 - 2021-12-17 \u00b6 Added \u00b6 Modify style of GeoNode layer and save it on the remote GeoNode Changed \u00b6 Network fetcher task is now able to perform PUT requests Better handling of network errors 0.3.3 - 2021-11-22 \u00b6 Fixed \u00b6 This release is functionally equivalent to v0.3.2 0.3.2 - 2021-11-22 - [YANKED] \u00b6 Changed \u00b6 Introduce compatibility with the latest developments of upstream GeoNode API 0.3.1 - 2021-05-07 \u00b6 Added \u00b6 Persist current search filters between restarts of QGIS Add icon to button that fetches keywords Improve user feedback when testing connections Fixed \u00b6 Improved layer loading with the CSW API Fix incorrect pagination results with the CSW API 0.3.0 - 2021-04-07 \u00b6 Added \u00b6 Allow filtering searches by temporal extent and publication date Add ordering of search results Add Changelog to the online documentation Further improve the look of search results Changed \u00b6 All HTTP requests are now done in a background thread to avoid blocking QGIS UI Load layers in a background thread in order to avoid blocking QGIS UI Improve feedback shown when searching and loading layers Move Title search filter out of the collapsible group, so that it is easier to access Fixed \u00b6 Improved error handling Fix incorrect visibility of the Search/Next/Previous search buttons Reset pagination when pressing Search button Remove unused Add/Close buttons on datasource manager dialogue 0.2.0 - 2021-02-28 \u00b6 Added \u00b6 Add initial support for earlier GeoNode versions Initial support for search filters Add support for applying a vector layer's default SLD style when loading Changed \u00b6 Improve look of search results Fixed \u00b6 Fix invalid update date for versions released via custom plugin repo 0.1.1 - 2021-02-02 \u00b6 Fixed \u00b6 Invalid tag format in previous version prevented automated distribution to our custom QGIS repo 0.1.0 - 2021-02-02 [YANKED] \u00b6 Added \u00b6 Load GeoNode layers into QGIS Load a GeoNode metadata into the corresponding QGIS layer Manage GeoNode connections through the plugin GUI Improve plugin metadata and documentation Fixed \u00b6 Current connection settings are now always up-to-date with the GUI 0.0.9 - 2021-01-11 \u00b6 Fixed \u00b6 Invalid plugin zip name 0.0.8 - 2021-01-08 \u00b6 Fixed \u00b6 Remove pycache files from plugin zip 0.0.7 - 2021-01-08 \u00b6 Fixed \u00b6 Invalid CI settings 0.0.6 - 2021-01-08 \u00b6 Fixed \u00b6 Invalid CI settings 0.0.5 - 2021-01-08 \u00b6 Added \u00b6 Initial project structure Add infrastructure for automated testing Add infrastructure for managing releases Add geonode API client","title":"Changelog"},{"location":"changelog-base/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"changelog-base/#unreleased","text":"","title":"Unreleased"},{"location":"changelog-base/#100-2022-02-25","text":"","title":"1.0.0 - 2022-02-25"},{"location":"changelog-base/#changed","text":"Default WFS version for new connections is now 1.1.0, which is known to work OK when editing vector layers via WFS","title":"Changed"},{"location":"changelog-base/#fixed","text":"First usage crash due to there not being a current connection","title":"Fixed"},{"location":"changelog-base/#100-rc1-2022-02-23","text":"","title":"1.0.0-rc1 - 2022-02-23"},{"location":"changelog-base/#changed_1","text":"Replace core QGIS GeoNode provider when activated Hide select UI controls when remote reports insufficient permissions Improve plugin description when viewed through QGIS plugin manager","title":"Changed"},{"location":"changelog-base/#fixed_1","text":"Improve focus behavior for searching datasets in QGIS data source dialog Improve handling of invalid connections","title":"Fixed"},{"location":"changelog-base/#095-2022-02-09","text":"","title":"0.9.5 - 2022-02-09"},{"location":"changelog-base/#added","text":"Add new WFS version config option and default to WFS v1.1.0","title":"Added"},{"location":"changelog-base/#fixed_2","text":"Remove unsupported f-string formatting on Python3.7 Assign UNKNOWN as dataset type when the remote does not report it","title":"Fixed"},{"location":"changelog-base/#094-2022-02-07","text":"","title":"0.9.4 - 2022-02-07"},{"location":"changelog-base/#added_1","text":"Add support for HTTP Basic Auth when connecting to GeoNode deployments featuring version 3.3.0 or later","title":"Added"},{"location":"changelog-base/#093-2022-01-20","text":"","title":"0.9.3 - 2022-01-20"},{"location":"changelog-base/#fixed_3","text":"Improve compatibility with Python 3.7 when exporting SLD for raster layers Fix network access manager not using correct timeout for layer uploads","title":"Fixed"},{"location":"changelog-base/#092-2022-01-18","text":"","title":"0.9.2 - 2022-01-18"},{"location":"changelog-base/#fixed_4","text":"Do not use QgsNetworkAccessManager features introduced after QGIS 3.18","title":"Fixed"},{"location":"changelog-base/#091-2022-01-14","text":"","title":"0.9.1 - 2022-01-14"},{"location":"changelog-base/#fixed_5","text":"Fix layer properties dialogue not opening correctly for non-GeoNode layers Improve plugin metadata fields when displayed in QGIS plugin repo list Do not use typing.Final in order to support PYthon 3.7","title":"Fixed"},{"location":"changelog-base/#090-2022-01-12","text":"","title":"0.9.0 - 2022-01-12"},{"location":"changelog-base/#added_2","text":"Add connection capabilities and detected version details Connection test now uses auth credentials, if available","title":"Added"},{"location":"changelog-base/#changed_2","text":"Layer uploads also send SLD style Update user guide","title":"Changed"},{"location":"changelog-base/#fixed_6","text":"Fix re-download of metadata for loaded layers Fix dataset abstract not being shown on the UI anymore","title":"Fixed"},{"location":"changelog-base/#050-2021-12-29","text":"","title":"0.5.0 - 2021-12-29"},{"location":"changelog-base/#added_3","text":"Allow uploading QGIS layers to GeoNode as new datasets","title":"Added"},{"location":"changelog-base/#fixed_7","text":"QGIS plugins menu no longer shows empy reference to this plugin","title":"Fixed"},{"location":"changelog-base/#040-2021-12-20","text":"","title":"0.4.0 - 2021-12-20"},{"location":"changelog-base/#added_4","text":"Allow loading and saving layer title and abstract from/to GeoNode","title":"Added"},{"location":"changelog-base/#changed_3","text":"Bump minimum QGIS version to 3.18","title":"Changed"},{"location":"changelog-base/#034-2021-12-17","text":"","title":"0.3.4 - 2021-12-17"},{"location":"changelog-base/#added_5","text":"Modify style of GeoNode layer and save it on the remote GeoNode","title":"Added"},{"location":"changelog-base/#changed_4","text":"Network fetcher task is now able to perform PUT requests Better handling of network errors","title":"Changed"},{"location":"changelog-base/#033-2021-11-22","text":"","title":"0.3.3 - 2021-11-22"},{"location":"changelog-base/#fixed_8","text":"This release is functionally equivalent to v0.3.2","title":"Fixed"},{"location":"changelog-base/#032-2021-11-22-yanked","text":"","title":"0.3.2 - 2021-11-22 - [YANKED]"},{"location":"changelog-base/#changed_5","text":"Introduce compatibility with the latest developments of upstream GeoNode API","title":"Changed"},{"location":"changelog-base/#031-2021-05-07","text":"","title":"0.3.1 - 2021-05-07"},{"location":"changelog-base/#added_6","text":"Persist current search filters between restarts of QGIS Add icon to button that fetches keywords Improve user feedback when testing connections","title":"Added"},{"location":"changelog-base/#fixed_9","text":"Improved layer loading with the CSW API Fix incorrect pagination results with the CSW API","title":"Fixed"},{"location":"changelog-base/#030-2021-04-07","text":"","title":"0.3.0 - 2021-04-07"},{"location":"changelog-base/#added_7","text":"Allow filtering searches by temporal extent and publication date Add ordering of search results Add Changelog to the online documentation Further improve the look of search results","title":"Added"},{"location":"changelog-base/#changed_6","text":"All HTTP requests are now done in a background thread to avoid blocking QGIS UI Load layers in a background thread in order to avoid blocking QGIS UI Improve feedback shown when searching and loading layers Move Title search filter out of the collapsible group, so that it is easier to access","title":"Changed"},{"location":"changelog-base/#fixed_10","text":"Improved error handling Fix incorrect visibility of the Search/Next/Previous search buttons Reset pagination when pressing Search button Remove unused Add/Close buttons on datasource manager dialogue","title":"Fixed"},{"location":"changelog-base/#020-2021-02-28","text":"","title":"0.2.0 - 2021-02-28"},{"location":"changelog-base/#added_8","text":"Add initial support for earlier GeoNode versions Initial support for search filters Add support for applying a vector layer's default SLD style when loading","title":"Added"},{"location":"changelog-base/#changed_7","text":"Improve look of search results","title":"Changed"},{"location":"changelog-base/#fixed_11","text":"Fix invalid update date for versions released via custom plugin repo","title":"Fixed"},{"location":"changelog-base/#011-2021-02-02","text":"","title":"0.1.1 - 2021-02-02"},{"location":"changelog-base/#fixed_12","text":"Invalid tag format in previous version prevented automated distribution to our custom QGIS repo","title":"Fixed"},{"location":"changelog-base/#010-2021-02-02-yanked","text":"","title":"0.1.0 - 2021-02-02 [YANKED]"},{"location":"changelog-base/#added_9","text":"Load GeoNode layers into QGIS Load a GeoNode metadata into the corresponding QGIS layer Manage GeoNode connections through the plugin GUI Improve plugin metadata and documentation","title":"Added"},{"location":"changelog-base/#fixed_13","text":"Current connection settings are now always up-to-date with the GUI","title":"Fixed"},{"location":"changelog-base/#009-2021-01-11","text":"","title":"0.0.9 - 2021-01-11"},{"location":"changelog-base/#fixed_14","text":"Invalid plugin zip name","title":"Fixed"},{"location":"changelog-base/#008-2021-01-08","text":"","title":"0.0.8 - 2021-01-08"},{"location":"changelog-base/#fixed_15","text":"Remove pycache files from plugin zip","title":"Fixed"},{"location":"changelog-base/#007-2021-01-08","text":"","title":"0.0.7 - 2021-01-08"},{"location":"changelog-base/#fixed_16","text":"Invalid CI settings","title":"Fixed"},{"location":"changelog-base/#006-2021-01-08","text":"","title":"0.0.6 - 2021-01-08"},{"location":"changelog-base/#fixed_17","text":"Invalid CI settings","title":"Fixed"},{"location":"changelog-base/#005-2021-01-08","text":"","title":"0.0.5 - 2021-01-08"},{"location":"changelog-base/#added_10","text":"Initial project structure Add infrastructure for automated testing Add infrastructure for managing releases Add geonode API client","title":"Added"},{"location":"development/","text":"Development \u00b6 This plugin uses poetry , typer and black . The general instructions for development are: Fork the code repository Clone your fork locally Install poetry Install the plugin dependencies into a new virtual env with cd qgis_geonode poetry install Work on a feature/bug on a new branch When ready, submit a PR for your code to be reviewed and merged pluginadmin \u00b6 This plugin comes with a pluginadmin.py python module which provides a CLI with commands useful for development. It is used to perform all operations related to the plugin: Install the plugin to your local QGIS user profile Ensure your virtual env has access to the QGIS Python bindings Build a zip of the plugin etc. It is run inside the virtual environment created by poetry. As such it must be invoked like this: # get an overview of existing commands poetry run python pluginadmin.py --help Install plugin into your local QGIS python plugins directory \u00b6 When developing, in order to try out the plugin locally you need to call poetry run python pluginadmin.py install command. This command will copy all files into your local QGIS python plugins directory. Upon making changes to the code you will need to call this installation command again and potentially also restart QGIS. Note Restarting QGIS is necessary because this plugin adds an additional data source provider to QGIS and there is currently no way to reload the available providers without restarting QGIS. poetry run python pluginadmin.py install Running tests \u00b6 Tests are made with pytest and pytest-qt . In order to be able to run the tests, the Python virtual environment needs to have the QGIS Python bindings available. This can be achieved by running: Note If your QGIS is in a non-standard location, you can set these env variables before running the command: - `PYQT5_DIR_PATH` - location of PyQt5. Defaults to `/usr/lib/python3/dist-packages/PyQt5` - `SIP_DIR_PATH` - Location of the SIP package. Defaults to `/usr/lib/python3/dist-packages` - `QGIS_PYTHON_DIR_PATH` - Location of the QGIS Python bindings. Defaults to `/usr/lib/python3/dist-packages/qgis` poetry run python pluginadmin.py install-qgis-into-venv Installing QGIS Python bindings into the Python virtual environment only needs to be done once. Finally, run tests with: poetry run pytest Contributing \u00b6 We welcome contributions from everybody but ask that the following process be adhered to: Find (or open) the issue that describes the problem that you want to help solving. Make a mention in the issue that you are working on a solution Fork this repo and work on a solution to the problem. Remember to add passing automated tests to attest that the problem has been fixed Run your code through the black formatter before submitting your PR. Otherwise the CI pipeline may fail, and we will request that you fix it before merging. This is how we run black in our CI pipeline: poetry run black src/qgis_geonode Releasing new versions \u00b6 This plugin uses an automated release process that is based upon github actions . New versions shall be released under the semantic versioning contract. In order to have a new version of the plugin release: Be sure to have updated the CHANGELOG.md Be sure to have updated the version on the pyproject.toml file. You can either manually modify the tool.poetry.version key, or you can run the poetry version {version specifier} command Create a new git annotated tag and push it to the repository. The tag name must follow the v{major}.{minor}.{patch} convention, for example: git tag -a -m 'version 0.3.2' v0.3.2 git push origin v0.3.2 Github actions will take it from there. The new release shall appear in the custom QGIS plugin repo shortly","title":"Development"},{"location":"development/#development","text":"This plugin uses poetry , typer and black . The general instructions for development are: Fork the code repository Clone your fork locally Install poetry Install the plugin dependencies into a new virtual env with cd qgis_geonode poetry install Work on a feature/bug on a new branch When ready, submit a PR for your code to be reviewed and merged","title":"Development"},{"location":"development/#pluginadmin","text":"This plugin comes with a pluginadmin.py python module which provides a CLI with commands useful for development. It is used to perform all operations related to the plugin: Install the plugin to your local QGIS user profile Ensure your virtual env has access to the QGIS Python bindings Build a zip of the plugin etc. It is run inside the virtual environment created by poetry. As such it must be invoked like this: # get an overview of existing commands poetry run python pluginadmin.py --help","title":"pluginadmin"},{"location":"development/#install-plugin-into-your-local-qgis-python-plugins-directory","text":"When developing, in order to try out the plugin locally you need to call poetry run python pluginadmin.py install command. This command will copy all files into your local QGIS python plugins directory. Upon making changes to the code you will need to call this installation command again and potentially also restart QGIS. Note Restarting QGIS is necessary because this plugin adds an additional data source provider to QGIS and there is currently no way to reload the available providers without restarting QGIS. poetry run python pluginadmin.py install","title":"Install plugin into your local QGIS python plugins directory"},{"location":"development/#running-tests","text":"Tests are made with pytest and pytest-qt . In order to be able to run the tests, the Python virtual environment needs to have the QGIS Python bindings available. This can be achieved by running: Note If your QGIS is in a non-standard location, you can set these env variables before running the command: - `PYQT5_DIR_PATH` - location of PyQt5. Defaults to `/usr/lib/python3/dist-packages/PyQt5` - `SIP_DIR_PATH` - Location of the SIP package. Defaults to `/usr/lib/python3/dist-packages` - `QGIS_PYTHON_DIR_PATH` - Location of the QGIS Python bindings. Defaults to `/usr/lib/python3/dist-packages/qgis` poetry run python pluginadmin.py install-qgis-into-venv Installing QGIS Python bindings into the Python virtual environment only needs to be done once. Finally, run tests with: poetry run pytest","title":"Running tests"},{"location":"development/#contributing","text":"We welcome contributions from everybody but ask that the following process be adhered to: Find (or open) the issue that describes the problem that you want to help solving. Make a mention in the issue that you are working on a solution Fork this repo and work on a solution to the problem. Remember to add passing automated tests to attest that the problem has been fixed Run your code through the black formatter before submitting your PR. Otherwise the CI pipeline may fail, and we will request that you fix it before merging. This is how we run black in our CI pipeline: poetry run black src/qgis_geonode","title":"Contributing"},{"location":"development/#releasing-new-versions","text":"This plugin uses an automated release process that is based upon github actions . New versions shall be released under the semantic versioning contract. In order to have a new version of the plugin release: Be sure to have updated the CHANGELOG.md Be sure to have updated the version on the pyproject.toml file. You can either manually modify the tool.poetry.version key, or you can run the poetry version {version specifier} command Create a new git annotated tag and push it to the repository. The tag name must follow the v{major}.{minor}.{patch} convention, for example: git tag -a -m 'version 0.3.2' v0.3.2 git push origin v0.3.2 Github actions will take it from there. The new release shall appear in the custom QGIS plugin repo shortly","title":"Releasing new versions"},{"location":"user-guide/","text":"User guide \u00b6 Managing GeoNode connections \u00b6 The QGIS GeoNode plugin adds a new Geonode Plugin section to the QGIS Data Source Manager dialogue. This section can be used to add new GeoNode connections, search for existing datasets and load them as QGIS layers. Add a new GeoNode connection \u00b6 In order to add a new GeoNode connection: Open the QGIS Data Source Manager (Ctrl + L) and go to the GeoNode Plugin section Add a new GeoNode instance connection, by clicking the New button A new dialogue is shown. This dialogue requests the following details of the GeoNode connection being created: Parameter Description Name The name used by QGIS to refer to this connection GeoNode URL The base URL of the GeoNode being connected to ( e.g. https://stable.demo.geonde.org ) Authentication Whether to use authentication to connect to GeoNode or not. See the Configure authentication section below for more details on how to configure authenticated access to GeoNode Page size How many search results per page shall be shown by QGIS. This defaults to 10 WFS version Which version of the Web Feature Service (WFS) to use for requesting vector layers from the remote GeoNode. Defaults to v1.1.0 . Note There is currently a bug in QGIS which prevents using WFS version 2.0.0 for editing a vector layer's geometry, https://github.com/qgis/QGIS/issues/47254 Therefore, for the time being, we reccomend using WFS version 1.1.0, which works OK. Optionally you may now click the Test Connection button. QGIS will then try to connect to GeoNode in order to discover what version of GeoNode is being used by the remote server. Upon a successful connection, the detected GeoNode version will be shown below. Depending on the detected GeoNode version, the plugin may not be able to offer all of its functionalities. The supported capabilities are listed in the API client capabilities section. Check the Supported capabilities section below for more information about capabilities Finally, accept the new connection dialogue by clicking the Ok button. Your new connection is now ready to be used. Edit an existing connection \u00b6 In order to edit the details of an existing connection, just re-open the QGIS Data Source Manager (Ctrl + L) , go to the GeoNode plugin section, select the relevant connection from the Connections dropdown and click the Edit button. A dialogue similar to the one discussed above in the Add a new GeoNode connection section shall be shown with the connection details ready for editing Remove a GeoNode connection \u00b6 In order to remove an existing connection, re-open the QGIS Data Source Manager (Ctrl + L) , go to the GeoNode plugin section, select the relevant connection from the Connections drop down and click the Remove button. A confirmation dialogue will ask whether to really remove the connection. Upon acceptance of this dialogue, the connection will be removed. Configure authentication \u00b6 The plugin is able to authenticate to remote GeoNode instances by using HTTP Basic Auth (OAuth2 is also an option, if you really want it). In order to configure Basic Auth: Open the main QGIS authentication settings dialogue by going to Settings -> Options... in the main QGIS menu bar and then access the Authentication section Press the Add new authentication configuration button . A new dialogue is shown. In this dialogue, fill in the following details: Parameter Description Name The name used by QGIS to refer to the authentication configuration Authentication type Select the Basic authentication option from the dropdown Username Your GeoNode username Password Your GeoNode user password The remaining fields can be left at their default values Now when configuring a new GeoNode connection , select this newly created authentication configuration in order to have the GeoNode connection use it Extra - Using OAuth2 for authorization This option is not recommended in most cases, since it involves a more advanced set up and also requires requesting additional information from the remote GeoNode administrators. It may be viable when connecting to GeoNode using shared computing resources, where you do not want to store your GeoNode user credentials locally. In order to be able to gain authenticated access to a GeoNode connection via OAuth2 you will need to request that one of the GeoNode administrators create an OAuth2 application and provide you with the following relevant details: Client ID Client Secret Most OAuth2 grant types implemented in QGIS are supported. We recommend using the Authorization Code grant type. In order to configure such an authentication: Open the main QGIS authentication settings dialogue by going to Settings -> Options... in the main QGIS menu bar and then access the Authentication section Press the Add new authentication configuration button . A new dialogue is shown. In this dialogue, fill in the following details: Parameter Description Name The name used by QGIS to refer to the authentication configuration Authentication type Select the OAuth2 authentication option from the dropdown Request URL This is derived from the GeoNode base URL and takes the form <geonode-base-url>/o/authorize/ , e.g. https://stable.demo.geonode.org/o/authorize/ Token URL This is derived from the GeoNode base URL and takes the form <geonode-base-url>/o/token/ , e.g. https://stable.demo.geonode.org/o/token/ Client ID The client ID you got from your GeoNode administrator Client Secret The client secret you got from your GeoNode administrator The remaining fields can be left at their default values Now when configuring a new GeoNode connection , select this newly created authentication configuration in order to have the GeoNode connection use it Searching GeoNode datasets \u00b6 After having configured a GeoNode connection, you may now use the plugin to search and load GeoNode datasets onto QGIS Select the relevant connection from the dropdown list Set any desired filters. Depending on the detected GeoNode version, the following search filters may be available: Search filter Description Title The resource title is used to filter search results and returning records that contains the supplied title Abstract Same as the title filter, records that contains the provided abstract value will be returned Keywords Search will filter all resources that have keywords that exactly matches the selected keyword Topic Category Filters the resources that their categories exactly matches the selected category Resources types Filters resources based on the selected resource type Temporal extent This filter used to select resources based on the stored temporal extent. Two fields start and end are used to represent the beginning and end of the extent respectively, during filtering both fields values are excluded. When both fields are supplied, resources containing temporal extent that is greater than start and less than end will be returned. If only start is provided, resources with the temporal extent beginning that is greater than start will be returned, if only end is provided resource with temporal extent end that is less than end will be returned Publication date This filter has similar conditions as the Temporal extent filter, the difference here is the filter is applied to the resource's publication date and not the resources temporal extent Spatial Extent The spatial extent filter is used to filter resources based on their geospatial extent, the extent can be filled by using a QGIS layer extent, map canvas extent or values can be manually added Choose which field to use for sorting the search results and whether to reverse the sort order. Note Sorting is performed by the remote GeoNode server. Therefore it must be parametrized before actually searching the remote. If you wish to change the sort order after having already performed a search then you need to press the Search GeoNode button again. Press the Search Geonode button. The plugin proceeds to contact the remote GeoNode instance and search for available datasets. After searching is complete a list of search results is shown below the search buttons. If a large number of results has been found you may use the previous and next buttons to paginate through the whole result set and eventually inspect all of them. Search results \u00b6 Each dataset shown on the search results list features the following elements: Parameter Description Title The title of the dataset Dataset type Wheter the dataset is a vector or a raster Abstract Brief description about the dataset Thumbnail Small image representation of the dataset Load layer via WMS Button to allow loading the dataset onto QGIS as a WMS layer Load via WFS/WCS Depending on the type of dataset, a button to load the dataset onto QGIS either as a WFS (for vectors) or WCS (for raster) layer Open dataset in web browser Button to open your web browser and visit the original dataset URL on the remote GeoNode instance Working with GeoNode layers \u00b6 After having discovered some interesting datasets, press one of their respective load buttons to load them as QGIS layers. Layer metadata \u00b6 For layers that came from GeoNode, their metadata is also populated from GeoNode. Metadata can be inspected by opening the layer properties dialogue (double-click the layer name on the QGIS layers list) and navigating to the Metadata section. If the relevant plugin capabilities are available for the detected GeoNode version, it may also be possible to modify some metadata fields and save them back to GeoNode. This can be achieved by: Modifying the relevant metadata property by using the QGIS layer metadata section of the layer properties dialogue Note The current version of the QGIS GeoNode plugin is only able to upload the following metadata fields back to GeoNode: Title Abstract Navigating to the GeoNode section of the layer properties dialogue and locating the Metadata group Pressing the Save current metadata to GeoNode button. The plugin then proceeds to upload the metadata back to GeoNode. Note Uploading metadata back to GeoNode is likely an operation that requires your GeoNode connection to use authentication . Layer symbology \u00b6 Depending on the layer type and on the capabilities supported by the plugin for the detected GeoNode version, the plugin may be able to load a layer's symbology from the remote GeoNode. Note GeoNode datasets export their symbology using the OGC Styled Layer Descriptor (.sld) format. QGIS is not currently able to load SLD for raster layers. Therefore, the QGIS GeoNode plugin is only able to style datasets which are loaded using the WFS vector provider The plugin may also be able to modify the layer symbology and upload it back to the remote GeoNode. This can be achieved by: Modifying the layer symbology using QGIS symbology tools Navigating to the GeoNode section of the layer properties dialogue and locating the Layer style group Pressing the Save current style to GeoNode button. The plugin then proceeds to upload the symbology back to GeoNode. Warning Uploading symbology back to GeoNode requires an intermediary step whereby the QGIS native symbology is converted to OGC SLD, which is the format GeoNode understands. Unfortunately it is currently not possible to perfectly match all QGIS native symbology features to SLD. Therefore, the resulting exported symbology may differ from the original Note Uploading symbology back to GeoNode is likely an operation that requires your GeoNode connection to use authentication . Uploading existing QGIS layers to GeoNode \u00b6 The plugin allows uploading existing QGIS layers to GeoNode. This can be achieved by: Load some layer onto QGIS. Any vector or raster layer should work Access the layer properties dialog and navigate to the GeoNode section. Then locate the Upload layer to GeoNode group Select an appropriate connection from the GeoNode connection drop down. Choose the default visibility to be applied to the uploaded layer by toggling the Make layer publicly available checkbox as appropriate Press the Upload layer to GeoNode button. The plugin then proceeds to upload the layer to GeoNode. Note Uploading a QGIS layer to GeoNode is likely an operation that requires your GeoNode connection to use authentication . Note The current version of this plugin uses a timeout of ten minutes for the layer upload operation, which may be a limitation for large files. A future version of the plugin may allow the user to modify this value. Plugin capabilities \u00b6 Depending on the detected version of GeoNode, the plugin may allow performing different actions. These are classified as a set of capabilities. Capability Available for GeoNode version Description FILTER_BY_TITLE All Filter datasets by their title property according to the presence of a user-provided sub-string FILTER_BY_ABSTRACT All Filter datasets by abstract property according to the presence of a user-provided sub-string FILTER_BY_RESOURCE_TYPES All Filter datasets by their type ( vector or raster ) FILTER_BY_KEYWORD >= 3.3.0 Filter datasets by an arbitrary keyword FILTER_BY_TOPIC_CATEGORY >= 3.3.0 Filter datasets by their ISO topic category FILTER_BY_TEMPORAL_EXTENT >= 3.3.0 Filter datasets by their temporal extent FILTER_BY_PUBLICATION_DATE >= 3.3.0 Filter datasets by their publication date FILTER_BY_SPATIAL_EXTENT - Filter datasets by a spatial bounding box LOAD_LAYER_METADATA >= 3.3.0 Load dataset metadata onto QGIS when loading as a layer MODIFY_LAYER_METADATA >= 3.3.0 Upload metadata fields of a loaded QGIS layer back to GeoNode LOAD_VECTOR_LAYER_STYLE >= 3.3.0 Load SLD style onto QGIS when loading GeoNode dataset as a QGIS vector layer LOAD_RASTER_LAYER_STYLE - Load SLD style onto QGIS when loading GeoNode dataset as QGIS raster layer MODIFY_VECTOR_LAYER_STYLE >= 3.3.0 Upload vector layer symbology back to GeoNode NOTE : This functionality is currently not supported when using HTTP Basic Authentication. Check https://github.com/kartoza/qgis_geonode/issues/222 for more information MODIFY_RASTER_LAYER_STYLE >= 3.3.0 Upload raster layer symbology back to GeoNode NOTE : This functionality is currently not supported when using HTTP Basic Authentication. Check https://github.com/kartoza/qgis_geonode/issues/222 for more information LOAD_VECTOR_DATASET_VIA_WMS All Load GeoNode vector dataset as a QGIS layer via OGC WMS LOAD_VECTOR_DATASET_VIA_WFS All Load GeoNode vector dataset as a QGIS layer using via OGC WFS LOAD_RASTER_DATASET_VIA_WMS All Load GeoNode raster dataset as a QGIS layer via OGC WMS LOAD_RASTER_DATASET_VIA_WCS All Load GeoNode raster dataset as a QGIS layer via OGC WCS UPLOAD_VECTOR_LAYER >= 3.4.0 Upload QGIS vector layer to GeoNode UPLOAD_RASTER_LAYER >= 3.4.0 upload QGIS raster layer to GeoNode","title":"User guide"},{"location":"user-guide/#user-guide","text":"","title":"User guide"},{"location":"user-guide/#managing-geonode-connections","text":"The QGIS GeoNode plugin adds a new Geonode Plugin section to the QGIS Data Source Manager dialogue. This section can be used to add new GeoNode connections, search for existing datasets and load them as QGIS layers.","title":"Managing GeoNode connections"},{"location":"user-guide/#add-a-new-geonode-connection","text":"In order to add a new GeoNode connection: Open the QGIS Data Source Manager (Ctrl + L) and go to the GeoNode Plugin section Add a new GeoNode instance connection, by clicking the New button A new dialogue is shown. This dialogue requests the following details of the GeoNode connection being created: Parameter Description Name The name used by QGIS to refer to this connection GeoNode URL The base URL of the GeoNode being connected to ( e.g. https://stable.demo.geonde.org ) Authentication Whether to use authentication to connect to GeoNode or not. See the Configure authentication section below for more details on how to configure authenticated access to GeoNode Page size How many search results per page shall be shown by QGIS. This defaults to 10 WFS version Which version of the Web Feature Service (WFS) to use for requesting vector layers from the remote GeoNode. Defaults to v1.1.0 . Note There is currently a bug in QGIS which prevents using WFS version 2.0.0 for editing a vector layer's geometry, https://github.com/qgis/QGIS/issues/47254 Therefore, for the time being, we reccomend using WFS version 1.1.0, which works OK. Optionally you may now click the Test Connection button. QGIS will then try to connect to GeoNode in order to discover what version of GeoNode is being used by the remote server. Upon a successful connection, the detected GeoNode version will be shown below. Depending on the detected GeoNode version, the plugin may not be able to offer all of its functionalities. The supported capabilities are listed in the API client capabilities section. Check the Supported capabilities section below for more information about capabilities Finally, accept the new connection dialogue by clicking the Ok button. Your new connection is now ready to be used.","title":"Add a new GeoNode connection"},{"location":"user-guide/#edit-an-existing-connection","text":"In order to edit the details of an existing connection, just re-open the QGIS Data Source Manager (Ctrl + L) , go to the GeoNode plugin section, select the relevant connection from the Connections dropdown and click the Edit button. A dialogue similar to the one discussed above in the Add a new GeoNode connection section shall be shown with the connection details ready for editing","title":"Edit an existing connection"},{"location":"user-guide/#remove-a-geonode-connection","text":"In order to remove an existing connection, re-open the QGIS Data Source Manager (Ctrl + L) , go to the GeoNode plugin section, select the relevant connection from the Connections drop down and click the Remove button. A confirmation dialogue will ask whether to really remove the connection. Upon acceptance of this dialogue, the connection will be removed.","title":"Remove a GeoNode connection"},{"location":"user-guide/#configure-authentication","text":"The plugin is able to authenticate to remote GeoNode instances by using HTTP Basic Auth (OAuth2 is also an option, if you really want it). In order to configure Basic Auth: Open the main QGIS authentication settings dialogue by going to Settings -> Options... in the main QGIS menu bar and then access the Authentication section Press the Add new authentication configuration button . A new dialogue is shown. In this dialogue, fill in the following details: Parameter Description Name The name used by QGIS to refer to the authentication configuration Authentication type Select the Basic authentication option from the dropdown Username Your GeoNode username Password Your GeoNode user password The remaining fields can be left at their default values Now when configuring a new GeoNode connection , select this newly created authentication configuration in order to have the GeoNode connection use it Extra - Using OAuth2 for authorization This option is not recommended in most cases, since it involves a more advanced set up and also requires requesting additional information from the remote GeoNode administrators. It may be viable when connecting to GeoNode using shared computing resources, where you do not want to store your GeoNode user credentials locally. In order to be able to gain authenticated access to a GeoNode connection via OAuth2 you will need to request that one of the GeoNode administrators create an OAuth2 application and provide you with the following relevant details: Client ID Client Secret Most OAuth2 grant types implemented in QGIS are supported. We recommend using the Authorization Code grant type. In order to configure such an authentication: Open the main QGIS authentication settings dialogue by going to Settings -> Options... in the main QGIS menu bar and then access the Authentication section Press the Add new authentication configuration button . A new dialogue is shown. In this dialogue, fill in the following details: Parameter Description Name The name used by QGIS to refer to the authentication configuration Authentication type Select the OAuth2 authentication option from the dropdown Request URL This is derived from the GeoNode base URL and takes the form <geonode-base-url>/o/authorize/ , e.g. https://stable.demo.geonode.org/o/authorize/ Token URL This is derived from the GeoNode base URL and takes the form <geonode-base-url>/o/token/ , e.g. https://stable.demo.geonode.org/o/token/ Client ID The client ID you got from your GeoNode administrator Client Secret The client secret you got from your GeoNode administrator The remaining fields can be left at their default values Now when configuring a new GeoNode connection , select this newly created authentication configuration in order to have the GeoNode connection use it","title":"Configure authentication"},{"location":"user-guide/#searching-geonode-datasets","text":"After having configured a GeoNode connection, you may now use the plugin to search and load GeoNode datasets onto QGIS Select the relevant connection from the dropdown list Set any desired filters. Depending on the detected GeoNode version, the following search filters may be available: Search filter Description Title The resource title is used to filter search results and returning records that contains the supplied title Abstract Same as the title filter, records that contains the provided abstract value will be returned Keywords Search will filter all resources that have keywords that exactly matches the selected keyword Topic Category Filters the resources that their categories exactly matches the selected category Resources types Filters resources based on the selected resource type Temporal extent This filter used to select resources based on the stored temporal extent. Two fields start and end are used to represent the beginning and end of the extent respectively, during filtering both fields values are excluded. When both fields are supplied, resources containing temporal extent that is greater than start and less than end will be returned. If only start is provided, resources with the temporal extent beginning that is greater than start will be returned, if only end is provided resource with temporal extent end that is less than end will be returned Publication date This filter has similar conditions as the Temporal extent filter, the difference here is the filter is applied to the resource's publication date and not the resources temporal extent Spatial Extent The spatial extent filter is used to filter resources based on their geospatial extent, the extent can be filled by using a QGIS layer extent, map canvas extent or values can be manually added Choose which field to use for sorting the search results and whether to reverse the sort order. Note Sorting is performed by the remote GeoNode server. Therefore it must be parametrized before actually searching the remote. If you wish to change the sort order after having already performed a search then you need to press the Search GeoNode button again. Press the Search Geonode button. The plugin proceeds to contact the remote GeoNode instance and search for available datasets. After searching is complete a list of search results is shown below the search buttons. If a large number of results has been found you may use the previous and next buttons to paginate through the whole result set and eventually inspect all of them.","title":"Searching GeoNode datasets"},{"location":"user-guide/#search-results","text":"Each dataset shown on the search results list features the following elements: Parameter Description Title The title of the dataset Dataset type Wheter the dataset is a vector or a raster Abstract Brief description about the dataset Thumbnail Small image representation of the dataset Load layer via WMS Button to allow loading the dataset onto QGIS as a WMS layer Load via WFS/WCS Depending on the type of dataset, a button to load the dataset onto QGIS either as a WFS (for vectors) or WCS (for raster) layer Open dataset in web browser Button to open your web browser and visit the original dataset URL on the remote GeoNode instance","title":"Search results"},{"location":"user-guide/#working-with-geonode-layers","text":"After having discovered some interesting datasets, press one of their respective load buttons to load them as QGIS layers.","title":"Working with GeoNode layers"},{"location":"user-guide/#layer-metadata","text":"For layers that came from GeoNode, their metadata is also populated from GeoNode. Metadata can be inspected by opening the layer properties dialogue (double-click the layer name on the QGIS layers list) and navigating to the Metadata section. If the relevant plugin capabilities are available for the detected GeoNode version, it may also be possible to modify some metadata fields and save them back to GeoNode. This can be achieved by: Modifying the relevant metadata property by using the QGIS layer metadata section of the layer properties dialogue Note The current version of the QGIS GeoNode plugin is only able to upload the following metadata fields back to GeoNode: Title Abstract Navigating to the GeoNode section of the layer properties dialogue and locating the Metadata group Pressing the Save current metadata to GeoNode button. The plugin then proceeds to upload the metadata back to GeoNode. Note Uploading metadata back to GeoNode is likely an operation that requires your GeoNode connection to use authentication .","title":"Layer metadata"},{"location":"user-guide/#layer-symbology","text":"Depending on the layer type and on the capabilities supported by the plugin for the detected GeoNode version, the plugin may be able to load a layer's symbology from the remote GeoNode. Note GeoNode datasets export their symbology using the OGC Styled Layer Descriptor (.sld) format. QGIS is not currently able to load SLD for raster layers. Therefore, the QGIS GeoNode plugin is only able to style datasets which are loaded using the WFS vector provider The plugin may also be able to modify the layer symbology and upload it back to the remote GeoNode. This can be achieved by: Modifying the layer symbology using QGIS symbology tools Navigating to the GeoNode section of the layer properties dialogue and locating the Layer style group Pressing the Save current style to GeoNode button. The plugin then proceeds to upload the symbology back to GeoNode. Warning Uploading symbology back to GeoNode requires an intermediary step whereby the QGIS native symbology is converted to OGC SLD, which is the format GeoNode understands. Unfortunately it is currently not possible to perfectly match all QGIS native symbology features to SLD. Therefore, the resulting exported symbology may differ from the original Note Uploading symbology back to GeoNode is likely an operation that requires your GeoNode connection to use authentication .","title":"Layer symbology"},{"location":"user-guide/#uploading-existing-qgis-layers-to-geonode","text":"The plugin allows uploading existing QGIS layers to GeoNode. This can be achieved by: Load some layer onto QGIS. Any vector or raster layer should work Access the layer properties dialog and navigate to the GeoNode section. Then locate the Upload layer to GeoNode group Select an appropriate connection from the GeoNode connection drop down. Choose the default visibility to be applied to the uploaded layer by toggling the Make layer publicly available checkbox as appropriate Press the Upload layer to GeoNode button. The plugin then proceeds to upload the layer to GeoNode. Note Uploading a QGIS layer to GeoNode is likely an operation that requires your GeoNode connection to use authentication . Note The current version of this plugin uses a timeout of ten minutes for the layer upload operation, which may be a limitation for large files. A future version of the plugin may allow the user to modify this value.","title":"Uploading existing QGIS layers to GeoNode"},{"location":"user-guide/#plugin-capabilities","text":"Depending on the detected version of GeoNode, the plugin may allow performing different actions. These are classified as a set of capabilities. Capability Available for GeoNode version Description FILTER_BY_TITLE All Filter datasets by their title property according to the presence of a user-provided sub-string FILTER_BY_ABSTRACT All Filter datasets by abstract property according to the presence of a user-provided sub-string FILTER_BY_RESOURCE_TYPES All Filter datasets by their type ( vector or raster ) FILTER_BY_KEYWORD >= 3.3.0 Filter datasets by an arbitrary keyword FILTER_BY_TOPIC_CATEGORY >= 3.3.0 Filter datasets by their ISO topic category FILTER_BY_TEMPORAL_EXTENT >= 3.3.0 Filter datasets by their temporal extent FILTER_BY_PUBLICATION_DATE >= 3.3.0 Filter datasets by their publication date FILTER_BY_SPATIAL_EXTENT - Filter datasets by a spatial bounding box LOAD_LAYER_METADATA >= 3.3.0 Load dataset metadata onto QGIS when loading as a layer MODIFY_LAYER_METADATA >= 3.3.0 Upload metadata fields of a loaded QGIS layer back to GeoNode LOAD_VECTOR_LAYER_STYLE >= 3.3.0 Load SLD style onto QGIS when loading GeoNode dataset as a QGIS vector layer LOAD_RASTER_LAYER_STYLE - Load SLD style onto QGIS when loading GeoNode dataset as QGIS raster layer MODIFY_VECTOR_LAYER_STYLE >= 3.3.0 Upload vector layer symbology back to GeoNode NOTE : This functionality is currently not supported when using HTTP Basic Authentication. Check https://github.com/kartoza/qgis_geonode/issues/222 for more information MODIFY_RASTER_LAYER_STYLE >= 3.3.0 Upload raster layer symbology back to GeoNode NOTE : This functionality is currently not supported when using HTTP Basic Authentication. Check https://github.com/kartoza/qgis_geonode/issues/222 for more information LOAD_VECTOR_DATASET_VIA_WMS All Load GeoNode vector dataset as a QGIS layer via OGC WMS LOAD_VECTOR_DATASET_VIA_WFS All Load GeoNode vector dataset as a QGIS layer using via OGC WFS LOAD_RASTER_DATASET_VIA_WMS All Load GeoNode raster dataset as a QGIS layer via OGC WMS LOAD_RASTER_DATASET_VIA_WCS All Load GeoNode raster dataset as a QGIS layer via OGC WCS UPLOAD_VECTOR_LAYER >= 3.4.0 Upload QGIS vector layer to GeoNode UPLOAD_RASTER_LAYER >= 3.4.0 upload QGIS raster layer to GeoNode","title":"Plugin capabilities"}]}